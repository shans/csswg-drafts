<h1>CSS Animations Level 2</h1>

<pre class='metadata'>
Status: ED
Shortname: css-animations-2
Level: 2
Group: csswg
ED: http://dev.w3.org/csswg/css-animations-2/
Editor: L. David Baron, Mozilla, dbaron@dbaron.org
!Issues List: <a href="https://www.w3.org/Bugs/Public/buglist.cgi?component=Animations&list_id=36653&product=CSS&query_format=advanced&resolution=---">In Bugzilla</a>

Abstract: This CSS module describes a way for authors to animate the values of CSS properties over time, using keyframes. The behavior of these keyframe animations can be controlled by specifying their duration, number of repeats, and repeating behavior.
</pre>
<pre class="anchors">
urlPrefix: http://w3c.github.io/web-animations/; type: interface; text: Animation; spec: web-animations
urlPrefix: http://w3c.github.io/web-animations/; type: interface; text: KeyframeEffectReadOnly; spec: web-animations
</pre>

<h2 id="delta">Delta specification</h2>

<p>This is a delta specification, meaning that it currently contains
only the differences from CSS Animations Level 1 [[!CSS3-ANIMATIONS]].
Once the Level 1 specification is closer to complete, it will be merged
with the additions here into a complete level 2 specification.</p>

<h2 id="events">Animation Events</h2>

<h3 id="event-animationevent">Types of <code>AnimationEvent</code></h3>

	<p>The <em>additional</em> types of animation events that can occur are:</p>

	<dl dfn-type=event dfn-for=animationevent>
		<dt><dfn>animationcancel</dfn>
		<dd>
			The <a idl>animationcancel</a> event occurs when the animation stops running in a way that does not fire an <a idl>animationend</a> event, such as a change in the 'animation-name' that removes the animation, or the animating element or one of its ancestors becoming ''display:none''.
			<ul>
				<li>Bubbles: Yes</li>
				<li>Cancelable: No</li>
				<li>Context Info: animationName, elapsedTime, pseudoElement</li>
			</ul>
	</dl>

### Generalized Event Dispatch {#generalized-event-dispatch}

Every animation which is not idle can be characterized as being in one of the following three states:

* <dfn>left-inactive</dfn> (currentTime &lt; startTime)
* <dfn>active</dfn> (currentTime &gt;= startTime, currentTime &lt; endTime) - either in the active interval, or in the delay phase
* <dfn>right-inactive</dfn> (currentTime &gt;= endTime)

Note that if playbackRate &lt; 0, then the equality parts of the inequalities switch around.

Add stuff for when events get fired here!!!


#### Non-normative Description of Event Dispatch {#non-normative-description-of-event-dispatch}

## Web Animations Instantiation of CSS Animations {#web-animations-instantiation-of-CSS-animations}

TODO: Copy prose from integration spec

### Interaction between animation-play-state and Web Animations API {#interaction-between-animation-play-state-and-web-animations-API}

## DOM Interfaces {#DOM-interfaces}

### The CSSAnimation interface {#the-CSSAnimation-interface}

<pre class="idl">
interface CSSAnimation : Animation {
  readonly attribute DOMString animationName;
};
</pre>

### The CSSKeyframeEffectReadOnly interface {#the-CSSKeyframeEffectReadOnly-interface}

<pre class="idl">
interface CSSKeyframeEffectReadOnly : KeyframeEffectReadOnly {
  readonly attribute CSSKeyframesRule rule;
};
</pre>


